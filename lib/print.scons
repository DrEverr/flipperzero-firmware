Import("env")

env.Append(
    LINKFLAGS=[
        #
        # used by our firmware, so we provide their realizations
        #
        "-Wl,--wrap,printf",  # everywhere
        "-Wl,--wrap,snprintf",  # everywhere
        "-Wl,--wrap,vsnprintf",  # m-string
        #
        # wrap other functions to make sure they are not called
        # realization is not provided
        #
        "-Wl,--wrap,fprintf",
        "-Wl,--wrap,fiprintf",
        "-Wl,--wrap,iprintf",
        "-Wl,--wrap,siprintf",
        "-Wl,--wrap,sniprintf",
        "-Wl,--wrap,sprintf",
        "-Wl,--wrap,vsniprintf",
        "-Wl,--wrap,__assert",
        "-Wl,--wrap,__assert_func",
    ],
    CCFLAGS=[
        "-fno-builtin-printf",
    ],
)


libenv = env.Clone(FW_LIB_NAME="print")
libenv.ApplyLibFlags()

sources = libenv.GlobRecursive("*.c", "print")

lib = libenv.StaticLibrary("${FW_LIB_NAME}", sources)
libenv.Install("${LIB_DIST_DIR}", lib)
Return("lib")
